{"version":3,"sources":["firebase/firebase.js","firebase/auth.js","firebase/db.js","components/SignOut.js","constants/routes.js","components/Navigation.js","components/carousel/ReactSlick.js","components/landing/Landing.js","components/signup/SignUp.js","components/PasswordForget.js","components/signin/SignIn.js","components/withAuthorization.js","components/Home.js","components/PasswordChange.js","components/Account.js","components/App.js","components/withAuthentication.js","stores/sessionStore.js","stores/userStore.js","stores/index.js","registerServiceWorker.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","apps","length","initializeApp","db","database","auth","doCreateUserWithEmailAndPassword","email","password","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","doCreateUser","id","username","ref","concat","set","onceGetUsers","once","SignOutButton","react_default","a","createElement","type","className","onClick","HOME","NavigationAuth","Link","to","routes","SignOut","NavigationNonAuth","compose","inject","observer","_ref","sessionStore","href","authUser","Navigation_NavigationAuth","Navigation_NavigationNonAuth","ReactSlick","lib_default","dots","src","Component","LandingPage","carousel_ReactSlick","INITIAL_STATE","passwordOne","passwordTwo","error","byPropKey","propertyName","value","Object","defineProperty","SignUpForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","event","_this$state","state","history","then","user","uid","setState","objectSpread","push","catch","preventDefault","_this2","_this$state2","isInvalid","htmlFor","aria-hidden","onChange","target","placeholder","disabled","message","SignUpLink","withRouter","SignUp_SignUpForm","PasswordForgetForm","PasswordForgetLink","PasswordForget","PasswordForget_PasswordForgetForm","SignInForm","handleDismiss","Alert_default","bsStyle","SignIn_SignInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","withAuthorization","condition","WithAuthorization","_React$Component","apply","arguments","inherits","createClass","key","onAuthStateChanged","React","HomePage","users","userStore","snapshot","setUsers","val","Home_UserList","UserList","keys","map","PasswordChangeForm","Account","PasswordChange","withAuthentication","WithAuthentication","setAuthUser","App","BrowserRouter","basename","components_Navigation","Route","exact","path","component","SignUpPage","SignInPage","PasswordForgetPage","AccountPage","SessionStore","rootStore","initializerDefineProperty","_descriptor","_descriptor2","observable","action","UserStore","userStore_descriptor","userStore_descriptor2","configure","enforceActions","RootStore","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","ReactDOM","render","index_module","store","components_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.68d446b1.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst prodConfig = {\n    apiKey: \"AIzaSyA9v3GrTjCsoM5MT-V2NnEqGsA37NuQOfE\",\n    authDomain: \"my-first-app-dfd97.firebaseapp.com\",\n    databaseURL: \"https://my-first-app-dfd97.firebaseio.com\",\n    projectId: \"my-first-app-dfd97\",\n    storageBucket: \"my-first-app-dfd97.appspot.com\",\n    messagingSenderId: \"1021669950976\"\n};\n\nconst devConfig = {\n    apiKey: \"AIzaSyA9v3GrTjCsoM5MT-V2NnEqGsA37NuQOfE\",\n    authDomain: \"my-first-app-dfd97.firebaseapp.com\",\n    databaseURL: \"https://my-first-app-dfd97.firebaseio.com\",\n    projectId: \"my-first-app-dfd97\",\n    storageBucket: \"my-first-app-dfd97.appspot.com\",\n    messagingSenderId: \"1021669950976\"\n};\n\nconst config = process.env.NODE_ENV === 'production' ? prodConfig : devConfig;\n\nif(!firebase.apps.length){\n    firebase.initializeApp(config);\n}\n\nconst db = firebase.database();\nconst auth = firebase.auth();\n\nexport {\n    db,\n    auth,\n};","import { auth } from './firebase';\n\n\n//Sign UP\nexport const doCreateUserWithEmailAndPassword = (email, password) =>\n    auth.createUserWithEmailAndPassword(email, password);\n\n//Sign In\nexport const doSignInWithEmailAndPassword = (email, password) =>\n    auth.signInWithEmailAndPassword(email, password);\n\n//Sign Out\nexport const doSignOut = () =>\n    auth.signOut();\n\n//Password Reset\nexport const doPasswordReset = (email) =>\n    auth.sendPasswordResetEmail(email);\n\n//Password change\nexport const doPasswordUpdate = (password) =>\n    auth.currentUser.updatePassword(password);","import { db } from './firebase';\n\n// User API\n\nexport const doCreateUser = (id, username, email) =>\n    db.ref(`users/${id}`).set({\n        username,\n        email,\n    });\n\nexport const onceGetUsers = () =>\n    db.ref('users').once('value');\n\n// Other Entity APIs ...","import React from 'react';\nimport {auth} from \"../firebase\";\n\nconst SignOutButton = () =>\n    <button\n        type={\"button\"}\n        className={\"btn btn-default\"}\n        onClick={auth.doSignOut}\n    >\n        Sign Out\n    </button>\n\nexport default SignOutButton;","export const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const LANDING = '/';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const BASE_PATH = '/react-redux-authentication';","import React from 'react';\nimport {inject, observer} from 'mobx-react';\nimport {compose} from 'recompose';\nimport {Link} from 'react-router-dom';\n\nimport SignOutButton from './SignOut';\nimport * as routes from '../constants/routes';\n\nconst Navigation = ({sessionStore}) =>\n    <nav className=\"navbar navbar-default\">\n        <div className=\"container-fluid\">\n            <div className=\"navbar-header\">\n                {/*<button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\"*/}\n                        {/*aria-expanded=\"false\" aria-controls=\"navbar\">*/}\n                    {/*<span className=\"sr-only\">Toggle navigation</span>*/}\n                    {/*<span className=\"icon-bar\"></span>*/}\n                    {/*<span className=\"icon-bar\"></span>*/}\n                    {/*<span className=\"icon-bar\"></span>*/}\n                {/*</button>*/}\n                <a className=\"navbar-brand\" href=\"/\">Project name</a>\n            </div>\n            {sessionStore.authUser\n                ? <NavigationAuth/>\n                : <NavigationNonAuth/>\n            }\n        </div>\n    </nav>\n\nconst NavigationAuth = () =>\n    <div id=\"navbar\" className=\"navbar-collapse\">\n        <ul className=\"nav navbar-nav navbar-right\">\n            <li><Link to={routes.LANDING}>Landing</Link></li>\n            <li><Link to={routes.HOME}>Home</Link></li>\n            <li><Link to={routes.ACCOUNT}>Account</Link></li>\n            <li><SignOutButton/></li>\n        </ul>\n    </div>\nconst NavigationNonAuth = () =>\n    <div id=\"navbar\" className=\"navbar-collapse\">\n        <ul className=\"nav navbar-nav navbar-right\">\n            <li><Link to={routes.LANDING}>Landing</Link></li>\n            <li><Link to={routes.SIGN_IN}>Sign In</Link></li>\n        </ul>\n    </div>\n\nexport default compose(\n    inject('sessionStore'),\n    observer\n)(Navigation);","import React, {Component} from \"react\";\n\nimport Slider from \"react-slick\";\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css'\nimport \"./index.css\";\n\nclass ReactSlick extends Component {\n    render() {\n        let settings = {\n            dots: true\n        };\n        return (\n            <div className=\"container\">\n                <Slider {...settings}>\n                    <div>\n                        <img src=\"http://placekitten.com/g/800/300\"/>\n                    </div>\n                    <div>\n                        <img src=\"http://placekitten.com/g/800/300\"/>\n                    </div>\n                    <div>\n                        <img src=\"http://placekitten.com/g/800/300\"/>\n                    </div>\n                    <div>\n                        <img src=\"http://placekitten.com/g/800/300\"/>\n                    </div>\n                </Slider>\n                <div className=\"wrapper\">\n                    <div>\n                        Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been\n                        the\n                        industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of\n                        type and\n                        scrambled it to make a type specimen book. It has survived not only five centuries, but also the\n                        leap into\n                        electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with\n                        the release of\n                        Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing\n                        software like\n                        Aldus PageMaker including versions of Lorem Ipsum.\n                    </div>\n                    <div>\n                        <div className=\"nested\">\n                            <div>\n                                Lorem Ipsum\n                            </div>\n                            <div>\n                                Lorem Ipsum\n                            </div>\n                            <div>\n                                Lorem Ipsum\n                            </div>\n                            <div>\n                                Lorem Ipsum\n                            </div>\n                            <div>\n                                Lorem Ipsum\n                            </div>\n                            <div>\n                                Lorem Ipsum\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been\n                        the\n                        industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of\n                        type and\n                        scrambled it to make a type specimen book. It has survived not only five centuries, but also the\n                        leap into\n                        electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with\n                        the release of\n                        Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing\n                        software like\n                        Aldus PageMaker including versions of Lorem Ipsum.\n                    </div>\n                    <div>\n                        Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been\n                        the\n                        industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of\n                        type and\n                        scrambled it to make a type specimen book. It has survived not only five centuries, but also the\n                        leap into\n                        electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with\n                        the release of\n                        Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing\n                        software like\n                        Aldus PageMaker including versions of Lorem Ipsum.\n                    </div>\n                    <div>\n                        Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been\n                        the\n                        industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of\n                        type and\n                        scrambled it to make a type specimen book. It has survived not only five centuries, but also the\n                        leap into\n                        electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with\n                        the release of\n                        Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing\n                        software like\n                        Aldus PageMaker including versions of Lorem Ipsum.\n                    </div>\n                    <div>\n                        Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been\n                        the\n                        industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of\n                        type and\n                        scrambled it to make a type specimen book. It has survived not only five centuries, but also the\n                        leap into\n                        electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with\n                        the release of\n                        Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing\n                        software like\n                        Aldus PageMaker including versions of Lorem Ipsum.\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ReactSlick;","import React, { Component } from 'react';\n\nimport ReactSlick from '../carousel/ReactSlick';\nimport './style.css';\n\nclass LandingPage extends  Component {\n\n    render(){\n        return(\n            <ReactSlick/>\n        )\n    }\n}\n\n\nexport default LandingPage;\n","import React, {Component} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport './style.css';\n\nimport {auth, db} from '../../firebase';\nimport * as routes from '../../constants/routes';\n\nconst SignUpPage = ({history}) =>\n    <div className=\"row main\">\n        <div className=\"main-login main-center\">\n            <h5>Sign up</h5>\n            <SignUpForm history={history}/>\n        </div>\n    </div>\n\nconst INITIAL_STATE = {\n    username: '',\n    email: '',\n    passwordOne: '',\n    passwordTwo: '',\n    error: null\n};\n\nconst byPropKey = (propertyName, value) => () => ({\n    [propertyName]: value,\n});\n\nclass SignUpForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {...INITIAL_STATE};\n    }\n\n    onSubmit = (event) => {\n        const {\n            username,\n            email,\n            passwordOne,\n        } = this.state;\n\n        const {\n            history,\n\n        } = this.props\n\n        auth.doCreateUserWithEmailAndPassword(email, passwordOne)\n            .then(authUser => {\n                // Create a user in your own accessible Firebase Database too\n                db.doCreateUser(authUser.user.uid, username, email)\n                    .then(() => {\n                        this.setState({...INITIAL_STATE});\n                        history.push(routes.HOME);\n                    })\n                    .catch(error => {\n                        this.setState(byPropKey('error', error));\n                    });\n            })\n            .catch(error => {\n                this.setState(byPropKey('error', error));\n            });\n        event.preventDefault();\n    }\n\n    render() {\n        const {\n            username,\n            email,\n            passwordOne,\n            passwordTwo,\n            error,\n        } = this.state;\n\n        const isInvalid =\n            passwordOne !== passwordTwo ||\n            passwordOne === '' ||\n            email === '' ||\n            username === ''\n\n        return (\n            <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"username\" className=\"cols-sm-2 control-label\">Full Name</label>\n                    <div className=\"cols-sm-10\">\n                        <div className=\"input-group\">\n                            <span className=\"input-group-addon\"><i className=\"fa fa-user fa\"\n                                                                   aria-hidden=\"true\"></i></span>\n                            <input\n                                value={username}\n                                onChange={event => this.setState(byPropKey('username', event.target.value))}\n                                type={\"text\"}\n                                placeholder={\"Full Name\"}\n                                className={\"form-control\"}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\" className=\"cols-sm-2 control-label\">Email Address</label>\n                    <div className=\"cols-sm-10\">\n                        <div className=\"input-group\">\n                            <span className=\"input-group-addon\"><i className=\"fa fa-envelope\"\n                                                                   aria-hidden=\"true\"></i></span>\n                            <input\n                                value={email}\n                                onChange={event => this.setState(byPropKey('email', event.target.value))}\n                                type=\"email\"\n                                placeholder=\"Email Address\"\n                                className={\"form-control\"}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"passwordOne\" className=\"cols-sm-2 control-label\">Password</label>\n                    <div className=\"cols-sm-10\">\n                        <div className=\"input-group\">\n                            <span className=\"input-group-addon\"><i className=\"fa fa-lock fa-lg\" aria-hidden=\"true\"></i></span>\n                            <input\n                                value={passwordOne}\n                                onChange={event => this.setState(byPropKey('passwordOne', event.target.value))}\n                                type=\"password\"\n                                placeholder=\"Password\"\n                                className={\"form-control\"}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"passwordTwo\" className=\"cols-sm-2 control-label\">Confirm Password</label>\n                    <div className=\"cols-sm-10\">\n                        <div className=\"input-group\">\n                            <span className=\"input-group-addon\"><i className=\"fa fa-lock fa-lg\" aria-hidden=\"true\"></i></span>\n                            <input\n                                value={passwordTwo}\n                                onChange={event => this.setState(byPropKey('passwordTwo', event.target.value))}\n                                type=\"password\"\n                                placeholder=\"Confirm Password\"\n                                className={\"form-control\"}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"form-group \">\n                <button disabled={isInvalid} type=\"submit\" className={\"btn btn-primary btn-lg btn-block login-button\"}>\n                    Sign Up\n                </button>\n                </div>\n                <div className=\"form-group \">\n                {error && <p>{error.message}</p>}\n                </div>\n            </form>\n        )\n    }\n}\n\nconst SignUpLink = () =>\n    <div id=\"register-link\" className=\"text-left\">\n        Don't have account?\n        {' '}\n        <Link to={routes.SIGN_UP}>Sign Up</Link>\n    </div>\n\nexport default withRouter(SignUpPage);\n\nexport {\n    SignUpForm,\n    SignUpLink,\n};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { auth } from '../firebase';\nimport * as routes from '../constants/routes';\n\nconst PasswordForgetPage = () =>\n    <div>\n        <h1>PasswordForget</h1>\n        <PasswordForgetForm />\n    </div>\n\nconst byPropKey = (propertyName, value) => () => ({\n    [propertyName]: value,\n});\n\nconst INITIAL_STATE = {\n    email: '',\n    error: null,\n};\n\nclass PasswordForgetForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = (event) => {\n        const { email } = this.state;\n\n        auth.doPasswordReset(email)\n            .then(() => {\n                this.setState({ ...INITIAL_STATE });\n            })\n            .catch(error => {\n                this.setState(byPropKey('error', error));\n            });\n\n        event.preventDefault();\n    }\n\n    render() {\n        const {\n            email,\n            error,\n        } = this.state;\n\n        const isInvalid = email === '';\n\n        return (\n            <form onSubmit={this.onSubmit}>\n                <input\n                    value={this.state.email}\n                    onChange={event => this.setState(byPropKey('email', event.target.value))}\n                    type=\"text\"\n                    placeholder=\"Email Address\"\n                    className={\"form-control\"}\n                />\n                <button disabled={isInvalid} type=\"submit\">\n                    Reset My Password\n                </button>\n\n                { error && <p>{error.message}</p> }\n            </form>\n        );\n    }\n}\n\nconst PasswordForgetLink = () =>\n    <div id=\"register-link\" className=\"text-right\">\n        <Link to={routes.PASSWORD_FORGET}>Forgot Password?</Link>\n    </div>\n\nexport default PasswordForgetPage;\n\nexport {\n    PasswordForgetForm,\n    PasswordForgetLink,\n};","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\n\nimport Alert from 'react-bootstrap/lib/Alert';\nimport './style.css';\nimport {SignUpLink} from \"../signup/SignUp\";\nimport {PasswordForgetLink} from '../PasswordForget';\nimport {auth} from \"../../firebase\";\nimport * as routes from '../../constants/routes';\n\nconst SignInPage = ({history}) =>\n    <div id=\"login\">\n        <div className=\"container\">\n            <div id=\"login-row\" className=\"row justify-content-center align-items-center\">\n                <div id=\"login-column\" className={\"login-middle\"}>\n                    <div className=\"login-box col-md-12\">\n                        <SignInForm history={history}/>\n                        <div className=\"form-group\">\n                        <PasswordForgetLink/>\n                        <SignUpLink/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\nconst byPropKey = (propertyName, value) => () => ({\n    [propertyName]: value\n});\n\n\nconst INITIAL_STATE = {\n    email: '',\n    password: '',\n    error: null,\n};\n\nclass SignInForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {...INITIAL_STATE};\n    }\n\n    onSubmit = (event) => {\n        const {\n            email,\n            password\n        } = this.state;\n\n        const {\n            history,\n        } = this.props;\n\n        auth.doSignInWithEmailAndPassword(email, password)\n            .then(() => {\n                this.setState({...INITIAL_STATE});\n                history.push(routes.HOME);\n            })\n            .catch(error => {\n                this.setState(byPropKey('error', error));\n            });\n        event.preventDefault();\n    }\n\n    render() {\n        const {\n            email,\n            password,\n            error,\n        } = this.state;\n\n        const isInvalid = password === '' || email === '';\n\n        return (\n            <form onSubmit={this.onSubmit} className=\"form\">\n                <h3 className=\"text-center text-info\">Login</h3>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\" className=\"text-info\">Email:</label><br/>\n                    <input\n                        value={email}\n                        onChange={event => this.setState(byPropKey('email', event.target.value))}\n                        type={\"email\"}\n                        placeholder={\"Email Address\"}\n                        className={\"form-control\"}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\" className=\"text-info\">Password:</label><br/>\n                    <input\n                        value={password}\n                        onChange={event => this.setState(byPropKey('password', event.target.value))}\n                        type={\"password\"}\n                        placeholder={\"Password\"}\n                        className={\"form-control\"}\n                    />\n                </div>\n                <div className=\"form-group\" onClick={this.handleDismiss}>\n                    <button disabled={isInvalid} type={\"submit\"} className=\"btn btn-info btn-md\">Sign In</button>\n                </div>\n\n                {error &&\n                <Alert bsStyle=\"danger\">\n                    <strong>Error!</strong>{error.message}\n                </Alert>\n                }\n\n            </form>\n        )\n    }\n}\n\nexport default withRouter(SignInPage);\n\nexport {\n    SignInForm,\n};","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { inject, observer } from 'mobx-react';\nimport { compose } from 'recompose';\n\nimport { firebase } from '../firebase';\nimport * as routes from '../constants/routes';\n\nconst withAuthorization = (condition) => (Component) => {\n    class WithAuthorization extends React.Component {\n        componentDidMount() {\n            firebase.auth.onAuthStateChanged(authUser => {\n                if (!condition(authUser)) {\n                    this.props.history.push(routes.SIGN_IN);\n                }\n            });\n        }\n\n        render() {\n            return this.props.sessionStore.authUser ? <Component {...this.props} /> : null;\n        }\n    }\n\n    return compose(\n        withRouter,\n        inject('sessionStore'),\n        observer\n    )(WithAuthorization);\n}\n\nexport default withAuthorization;","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { compose } from 'recompose';\n\nimport withAuthorization from './withAuthorization';\nimport { db } from '../firebase';\n\nclass HomePage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            users: null,\n        };\n    }\n\n    componentDidMount() {\n        const { userStore } = this.props;\n\n        db.onceGetUsers().then(snapshot =>\n            userStore.setUsers(snapshot.val())\n        );\n    }\n\n    render() {\n        const { users } = this.props.userStore;\n        return (\n            <div>\n                <h1>Home</h1>\n                <p>The Home Page is accessible by every signed in user.</p>\n                { !!users && <UserList users={users} /> }\n            </div>\n        );\n    }\n}\n\nconst UserList = ({ users }) =>\n    <div>\n        <h2>List of Usernames of Users</h2>\n        <p>(Saved on Sign Up in Firebase Database)</p>\n\n        {Object.keys(users).map(key =>\n            <div key={key}>{users[key].username}</div>\n        )}\n    </div>\n\nconst mapStateToProps = (state) => ({\n    users: state.userState.users,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    onSetUsers: (users) => dispatch({ type: 'USERS_SET', users }),\n});\n\nconst authCondition = (authUser) => !!authUser;\n\nexport default compose(\n    withAuthorization(authCondition),\n    inject('userStore'),\n    observer\n)(HomePage);","import React, { Component } from 'react';\n\nimport { auth } from '../firebase';\n\nconst byPropKey = (propertyName, value) => () => ({\n    [propertyName]: value,\n});\n\nconst INITIAL_STATE = {\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n};\n\nclass PasswordChangeForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = (event) => {\n        const { passwordOne } = this.state;\n\n        auth.doPasswordUpdate(passwordOne)\n            .then(() => {\n                this.setState({ ...INITIAL_STATE });\n            })\n            .catch(error => {\n                this.setState(byPropKey('error', error));\n            });\n\n        event.preventDefault();\n    }\n\n    render() {\n        const {\n            passwordOne,\n            passwordTwo,\n            error,\n        } = this.state;\n\n        const isInvalid =\n            passwordOne !== passwordTwo ||\n            passwordOne === '';\n\n        return (\n            <form onSubmit={this.onSubmit}>\n                <input\n                    value={passwordOne}\n                    onChange={event => this.setState(byPropKey('passwordOne', event.target.value))}\n                    type=\"password\"\n                    placeholder=\"New Password\"\n                />\n                <input\n                    value={passwordTwo}\n                    onChange={event => this.setState(byPropKey('passwordTwo', event.target.value))}\n                    type=\"password\"\n                    placeholder=\"Confirm New Password\"\n                />\n                <button disabled={isInvalid} type=\"submit\">\n                    Reset My Password\n                </button>\n\n                { error && <p>{error.message}</p> }\n            </form>\n        );\n    }\n}\n\nexport default PasswordChangeForm;","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { compose } from 'recompose';\n\nimport { PasswordForgetForm } from './PasswordForget';\nimport PasswordChangeForm from './PasswordChange';\nimport withAuthorization from './withAuthorization';\n\nconst AccountPage = ({ sessionStore }) =>\n    <div>\n        <h1>Account: {sessionStore.authUser.email}</h1>\n        <PasswordForgetForm />\n        <PasswordChangeForm />\n    </div>\n\nconst authCondition = (authUser) => !!authUser;\n\nexport default compose(\n    withAuthorization(authCondition),\n    inject('sessionStore'),\n    observer\n)(AccountPage);","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\nimport Navigation from './Navigation';\nimport LandingPage from './landing/Landing';\nimport SignUpPage from './signup/SignUp';\nimport SignInPage from './signin/SignIn';\nimport PasswordForgetPage from './PasswordForget';\nimport HomePage from './Home';\nimport AccountPage from './Account';\n\nimport * as routes from '../constants/routes';\nimport { firebase } from '../firebase';\n\nimport withAuthentication from './withAuthentication';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authUser: null,\n        };\n    }\n\n    componentDidMount(){\n        firebase.auth.onAuthStateChanged(authUser => {\n            authUser ? this.setState({ authUser }) : this.setState({ authUser: null});\n        });\n    }\n\n    render() {\n        return (\n            <Router basename={routes.BASE_PATH}>\n                <div className=\"container\">\n                    <Navigation authUser={this.state.authUser} />\n                    <hr/>\n                    <Route exact path={routes.LANDING} component={LandingPage} />\n                    <Route exact path={routes.SIGN_UP} component={SignUpPage} />\n                    <Route exact path={routes.SIGN_IN} component={SignInPage} />\n                    <Route exact path={routes.PASSWORD_FORGET} component={PasswordForgetPage} />\n                    <Route exact path={routes.HOME} component={HomePage} />\n                    <Route exact path={routes.ACCOUNT} component={AccountPage} />\n                </div>\n            </Router>\n        );\n    }\n}\nexport default withAuthentication(App);","import React from 'react';\nimport { inject } from 'mobx-react';\n\nimport { firebase } from '../firebase';\n\nconst withAuthentication = (Component) => {\n    class WithAuthentication extends React.Component {\n        componentDidMount() {\n            const { sessionStore } = this.props;\n\n            firebase.auth.onAuthStateChanged(authUser => {\n                authUser\n                    ? sessionStore.setAuthUser(authUser)\n                    : sessionStore.setAuthUser(null);\n            });\n        }\n\n        render() {\n            return (\n                <Component {...this.props} />\n            );\n        }\n    }\n\n    return inject('sessionStore')(WithAuthentication);\n}\n\nexport default withAuthentication;","import { observable, action } from 'mobx';\n\nclass SessionStore {\n\n    @observable authUser = null;\n\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n    }\n\n    @action setAuthUser = authUser => {\n        this.authUser = authUser;\n    }\n}\n\nexport default SessionStore;","import { observable, action } from 'mobx';\n\nclass UserStore {\n    @observable users = [];\n\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n    }\n\n    @action setUsers = users => {\n        this.users = users;\n    }\n}\n\nexport default UserStore;","import { configure } from 'mobx';\n\nimport SessionStore from './sessionStore';\nimport UserStore from './userStore';\n\nconfigure({ enforceActions: true });\n\nclass RootStore {\n    constructor() {\n        this.sessionStore = new SessionStore(this);\n        this.userStore = new UserStore(this);\n    }\n}\n\nconst rootStore = new RootStore();\n\nexport default rootStore;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (!isLocalhost) {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            } else {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log('New content is available; please refresh.');\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Button } from 'react-bootstrap';\nimport { Provider } from 'mobx-react';\nimport './index.css';\nimport App from './components/App';\nimport store from './stores';\n\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n    <Provider { ...store }>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nregisterServiceWorker();\n"],"sourceRoot":""}